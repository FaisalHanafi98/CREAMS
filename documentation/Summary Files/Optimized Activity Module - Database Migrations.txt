<?php
// Migration 1: Create activities table
// File: database/migrations/2024_12_15_000001_create_activities_table.php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('activities', function (Blueprint $table) {
            $table->id();
            $table->string('activity_name');
            $table->string('activity_code', 20)->unique();
            $table->text('description');
            $table->string('category', 100)->index();
            $table->text('objectives')->nullable();
            $table->text('materials_needed')->nullable();
            $table->string('age_group', 50)->index();
            $table->string('difficulty_level', 50);
            $table->boolean('is_active')->default(true)->index();
            $table->unsignedBigInteger('created_by');
            $table->timestamps();
            
            // Foreign keys
            $table->foreign('created_by')->references('id')->on('users')->onDelete('cascade');
            
            // Indexes for performance
            $table->index(['category', 'is_active']);
            $table->index(['age_group', 'difficulty_level']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('activities');
    }
};

<?php
// Migration 2: Create activity sessions table  
// File: database/migrations/2024_12_15_000002_create_activity_sessions_table.php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('activity_sessions', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('activity_id');
            $table->unsignedBigInteger('teacher_id')->index();
            $table->string('class_name', 50);
            $table->enum('day_of_week', ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']);
            $table->time('start_time');
            $table->time('end_time');
            $table->decimal('duration_hours', 3, 1);
            $table->string('location', 100);
            $table->integer('max_capacity')->default(10);
            $table->integer('current_enrollment')->default(0);
            $table->string('semester', 10)->index(); // Format: YYYY-1 or YYYY-2
            $table->boolean('is_active')->default(true)->index();
            $table->text('notes')->nullable();
            $table->timestamps();
            
            // Foreign keys
            $table->foreign('activity_id')->references('id')->on('activities')->onDelete('cascade');
            $table->foreign('teacher_id')->references('id')->on('users')->onDelete('cascade');
            
            // Indexes for performance
            $table->index(['activity_id', 'is_active']);
            $table->index(['teacher_id', 'day_of_week']);
            $table->index(['semester', 'is_active']);
            
            // Unique constraint to prevent double-booking
            $table->unique(['teacher_id', 'day_of_week', 'start_time', 'semester'], 'unique_teacher_schedule');
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('activity_sessions');
    }
};

<?php
// Migration 3: Create session enrollments table
// File: database/migrations/2024_12_15_000003_create_session_enrollments_table.php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('session_enrollments', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('session_id');
            $table->unsignedBigInteger('trainee_id');
            $table->date('enrollment_date');
            $table->enum('status', ['enrolled', 'waitlisted', 'withdrawn'])->default('enrolled');
            $table->unsignedBigInteger('enrolled_by');
            $table->text('notes')->nullable();
            $table->timestamps();
            
            // Foreign keys
            $table->foreign('session_id')->references('id')->on('activity_sessions')->onDelete('cascade');
            $table->foreign('trainee_id')->references('id')->on('trainees')->onDelete('cascade');
            $table->foreign('enrolled_by')->references('id')->on('users')->onDelete('cascade');
            
            // Indexes
            $table->index(['session_id', 'status']);
            $table->index(['trainee_id', 'status']);
            
            // Prevent duplicate enrollments
            $table->unique(['session_id', 'trainee_id']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('session_enrollments');
    }
};

<?php
// Migration 4: Create activity attendance table
// File: database/migrations/2024_12_15_000004_create_activity_attendance_table.php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('activity_attendance', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('session_id');
            $table->unsignedBigInteger('trainee_id');
            $table->date('attendance_date');
            $table->enum('status', ['present', 'absent', 'late', 'excused'])->default('absent');
            $table->integer('participation_score')->nullable(); // 1-10 scale
            $table->text('notes')->nullable();
            $table->unsignedBigInteger('marked_by');
            $table->timestamps();
            
            // Foreign keys
            $table->foreign('session_id')->references('id')->on('activity_sessions')->onDelete('cascade');
            $table->foreign('trainee_id')->references('id')->on('trainees')->onDelete('cascade');
            $table->foreign('marked_by')->references('id')->on('users')->onDelete('cascade');
            
            // Indexes
            $table->index(['session_id', 'attendance_date']);
            $table->index(['trainee_id', 'attendance_date']);
            $table->index(['attendance_date', 'status']);
            
            // Prevent duplicate attendance records
            $table->unique(['session_id', 'trainee_id', 'attendance_date']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('activity_attendance');
    }
};

<?php
// Migration 5: Data consolidation migration (OPTIONAL - only if you have existing data)
// File: database/migrations/2024_12_15_000005_consolidate_activity_data.php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;

return new class extends Migration
{
    public function up(): void
    {
        try {
            // Migrate data from rehabilitation_activities to activities
            if (Schema::hasTable('rehabilitation_activities')) {
                Log::info('Migrating data from rehabilitation_activities to activities');
                
                $rehabActivities = DB::table('rehabilitation_activities')->get();
                
                foreach ($rehabActivities as $rehabActivity) {
                    DB::table('activities')->insert([
                        'activity_name' => $rehabActivity->name,
                        'activity_code' => strtoupper(substr($rehabActivity->category, 0, 3)) . '-' . str_pad($rehabActivity->id, 3, '0', STR_PAD_LEFT),
                        'description' => $rehabActivity->full_description ?? $rehabActivity->short_description,
                        'category' => $rehabActivity->category,
                        'objectives' => $rehabActivity->progress_metrics ?? null,
                        'materials_needed' => null, // Map from rehabilitation_resources if needed
                        'age_group' => $rehabActivity->age_range ?? 'All Ages',
                        'difficulty_level' => ucfirst($rehabActivity->difficulty_level),
                        'is_active' => $rehabActivity->status === 'published',
                        'created_by' => $rehabActivity->created_by,
                        'created_at' => $rehabActivity->created_at,
                        'updated_at' => $rehabActivity->updated_at
                    ]);
                }
                
                Log::info('Successfully migrated ' . $rehabActivities->count() . ' activities');
            }
            
            // Migrate data from trainee_activities if exists
            if (Schema::hasTable('trainee_activities')) {
                Log::info('Migrating data from trainee_activities');
                
                $traineeActivities = DB::table('trainee_activities')->get();
                
                foreach ($traineeActivities as $traineeActivity) {
                    // Check if activity already exists
                    $existingActivity = DB::table('activities')
                        ->where('activity_name', $traineeActivity->activity_name ?? 'Migrated Activity ' . $traineeActivity->id)
                        ->first();
                    
                    if (!$existingActivity) {
                        DB::table('activities')->insert([
                            'activity_name' => $traineeActivity->activity_name ?? 'Migrated Activity ' . $traineeActivity->id,
                            'activity_code' => 'MIG-' . str_pad($traineeActivity->id, 3, '0', STR_PAD_LEFT),
                            'description' => $traineeActivity->description ?? 'Migrated from trainee activities',
                            'category' => $traineeActivity->category ?? 'General',
                            'objectives' => $traineeActivity->objectives ?? null,
                            'materials_needed' => null,
                            'age_group' => 'All Ages',
                            'difficulty_level' => 'Beginner',
                            'is_active' => true,
                            'created_by' => $traineeActivity->created_by ?? 1,
                            'created_at' => $traineeActivity->created_at ?? now(),
                            'updated_at' => $traineeActivity->updated_at ?? now()
                        ]);
                    }
                }
                
                Log::info('Successfully migrated trainee activities');
            }
            
        } catch (\Exception $e) {
            Log::error('Error during activity data consolidation: ' . $e->getMessage());
            throw $e;
        }
    }

    public function down(): void
    {
        // This migration is not reversible as it consolidates data
        Log::warning('Activity data consolidation migration cannot be reversed');
    }
};